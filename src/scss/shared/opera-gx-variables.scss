/// @returns {<number>} How much to scale the background color by at the depth
@function background-depth-to-scale($depth) {
    $b : if($depth>=5, 0, 1);
    $m : if($depth>=5, 1, 0.5);
    $scale: (
        $m * $depth + $b
    );
@return $scale;
}

/// @returns List of RGB values
@function opera-gx-theme-color-rgb($what, $depth: 1) {
    $env-r: env(-opera-gx-#{$what}-color-r);
    $env-g: env(-opera-gx-#{$what}-color-g);
    $env-b: env(-opera-gx-#{$what}-color-b);

    @if $depth ==1 {
        @return $env-r, $env-g, $env-b;
    }

    @else {
        $scale: background-depth-to-scale($depth);
        @return calc($env-r * $scale), calc($env-g * $scale), calc($env-b * $scale);
    }
}

/// @param $level White level
/// @returns White percent
@function white-level-to-percent($level) {
    @return ($level * 20%);
}

/// @returns {<color>} Color
@function opera-gx-theme-color($what, $depth: 1, $white-level: 0) {
    $color: rgb(opera-gx-theme-color-rgb($what, $depth));

    @if $white-percent==0 {
        @return $color;
    }

    @else {
        $white-percent: white-level-to-percent($white-level);
        @return color-mix(in srgb, $color, white $white-percent);
    }
}

:root {
    @each $what in "accent", "background" {
        --opera-gx-#{$what}-color-rgb: #{opera-gx-theme-color-rgb($what)};
        --opera-gx-#{$what}-color: rgb(var(--opera-gx-#{$what}-color-rgb));

        --opera-gx-#{$what}-color-hue-deg: calc(env(-opera-gx-#{$what}-color-h) * 1deg);
        --opera-gx-#{$what}-color-sat: env(-opera-gx-#{$what}-color-s);
        --opera-gx-#{$what}-color-lum: env(-opera-gx-#{$what}-color-l);
    }

    @for $i from 1 through 10 {
        --opera-gx-background-color-#{$i}-rgb: #{opera-gx-theme-color-rgb("background", $i)};
        --opera-gx-background-color-#{$i}: rgb(var(--opera-gx-background-color-#{$i}-rgb));

        @for $j from 1 through 4 {
            $amount: 100% - ($j * 20%);
            --opera-gx-background-color-#{$i}-#{$j}: color-mix(in srgb, var(--opera-gx-background-color-#{$i}) #{$amount}, white);
        }
    }

    @for $i from 1 through 4 {
        $amount: 100% - ($i * 20%);
        --opera-gx-accent-color-#{$i}: color-mix(in srgb, var(--opera-gx-accent-color) #{$amount}, white);
    }

    --cp-size: 10px;
}

@mixin gx-clip-path($size: var(--cp-size)) {
    clip-path: polygon($size 0, 100% 0, 100% calc(100% - $size), calc(100% - $size) 100%, 0 100%, 0 $size);
    border-radius: 0;
}
